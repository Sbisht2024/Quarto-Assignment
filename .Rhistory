scale_fill_viridis_c() +
theme_minimal() +
labs(title = "World Map of Average Indicator Values",
fill = "Average Value")
world <- map_data("world")
indicator_avg <- data %>%
filter(indicator == "Percentage children suffering at least three deprivation. Homogeneous severe standards") %>%
group_by(country) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE))
world_data <- left_join(world, indicator_avg, by = c("region" = "country"))
ggplot(world_data, aes(long, lat, group = group, fill = avg_value)) +
geom_polygon(color = "white") +
scale_fill_viridis_c() +
theme_minimal() +
labs(title = "World Map of Average Indicator Values",
fill = "Average Value")
top_countries <- indicator_avg %>%
top_n(10, avg_value) %>%
arrange(desc(avg_value))
ggplot(top_countries, aes(x = reorder(country, avg_value), y = avg_value, fill = avg_value)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Top 10 Countries by Average Indicator Value",
x = "Country",
y = "Average Value",
fill = "Average Value")
scatter_data <- data %>%
group_by(country) %>%
filter(indicator == "Percentage children suffering at least three deprivation. Homogeneous severe standards") %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE),
GDP_per_capita = mean(`Inflation..consumer.prices..annual...`, na.rm = TRUE))
ggplot(scatter_data, aes(x = GDP_per_capita, y = avg_value)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
theme_minimal() +
labs(title = "Scatterplot of GDP per Capita vs. Average Indicator Value",
x = "GDP per Capita",
y = "Average Indicator Value")
scatter_data <- data %>%
group_by(country) %>%
filter(indicator == "Percentage children suffering at least three deprivation. Homogeneous severe standards") %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE),
GDP_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE))
ggplot(scatter_data, aes(x = GDP_per_capita, y = avg_value)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
theme_minimal() +
labs(title = "Scatterplot of GDP per Capita vs. Average Indicator Value",
x = "GDP per Capita",
y = "Average Indicator Value")
scatter_data <- data %>%
group_by(country) %>%
filter(indicator == "Percentage children suffering at least three deprivation. Homogeneous severe standards") %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE),
GDP_per_capita = mean(`Life.expectancy.at.birth..total..years.`, na.rm = TRUE))
ggplot(scatter_data, aes(x = GDP_per_capita, y = avg_value)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
theme_minimal() +
labs(title = "Scatterplot of GDP per Capita vs. Average Indicator Value",
x = "GDP per Capita",
y = "Average Indicator Value")
# Convert time_period to numeric if it contains only year values
data$time_period <- as.numeric(data$time_period)
# Filter and summarize data for the time-series chart
time_series_data <- data %>%
filter(country == "Madagascar") %>%
filter(indicator == "Percentage children suffering at least three deprivation. Homogeneous severe standards") %>%
group_by(time_period) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE))
# Create the time-series chart
ggplot(time_series_data, aes(x = time_period, y = avg_value, group = 1)) +
geom_line() +
theme_minimal() +
labs(title = "Time-Series of Indicator for India",
x = "Year",
y = "Average Value")
# Convert time_period to numeric if it contains only year values
data$time_period <- as.numeric(data$time_period)
# Filter and summarize data for the time-series chart
time_series_data <- data %>%
filter(country == "Ethiopia") %>%
filter(indicator == "Percentage children suffering at least three deprivation. Homogeneous severe standards") %>%
group_by(time_period) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE))
# Create the time-series chart
ggplot(time_series_data, aes(x = time_period, y = avg_value, group = 1)) +
geom_line() +
theme_minimal() +
labs(title = "Time-Series of Indicator for India",
x = "Year",
y = "Average Value")
# Convert time_period to numeric if it contains only year values
data$time_period <- as.numeric(data$time_period)
# Filter and summarize data for the time-series chart
time_series_data <- data %>%
filter(country == "Chad") %>%
filter(indicator == "Percentage children suffering at least three deprivation. Homogeneous severe standards") %>%
group_by(time_period) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE))
# Create the time-series chart
ggplot(time_series_data, aes(x = time_period, y = avg_value, group = 1)) +
geom_line() +
theme_minimal() +
labs(title = "Time-Series of Indicator for India",
x = "Year",
y = "Average Value")
# Convert time_period to numeric if it contains only year values
data$time_period <- as.numeric(data$time_period)
# Filter and summarize data for the time-series chart
time_series_data <- data %>%
filter(country == "Cambodia") %>%
filter(indicator == "Percentage children suffering at least three deprivation. Homogeneous severe standards") %>%
group_by(time_period) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE))
# Create the time-series chart
ggplot(time_series_data, aes(x = time_period, y = avg_value, group = 1)) +
geom_line() +
theme_minimal() +
labs(title = "Time-Series of Indicator for India",
x = "Year",
y = "Average Value")
# Convert time_period to numeric if it contains only year values
data$time_period <- as.numeric(data$time_period)
# Filter and summarize data for the time-series chart
time_series_data <- data %>%
filter(country == "Niger") %>%
filter(indicator == "Percentage children suffering at least three deprivation. Homogeneous severe standards") %>%
group_by(time_period) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE))
# Create the time-series chart
ggplot(time_series_data, aes(x = time_period, y = avg_value, group = 1)) +
geom_line() +
theme_minimal() +
labs(title = "Time-Series of Indicator for India",
x = "Year",
y = "Average Value")
# Convert time_period to numeric if it contains only year values
data$time_period <- as.numeric(data$time_period)
# Filter and summarize data for the time-series chart
time_series_data <- data %>%
filter(country == "India") %>%
filter(indicator == "Percentage children suffering at least three deprivation. Homogeneous severe standards") %>%
group_by(time_period) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE))
# Create the time-series chart
ggplot(time_series_data, aes(x = time_period, y = avg_value, group = 1)) +
geom_line() +
theme_minimal() +
labs(title = "Time-Series of Indicator for India",
x = "Year",
y = "Average Value")
# Convert time_period to numeric if it contains only year values
data$time_period <- as.numeric(data$time_period)
# Filter and summarize data for the time-series chart
time_series_data <- data %>%
filter(country == "India") %>%
group_by(time_period) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE))
# Create the time-series chart
ggplot(time_series_data, aes(x = time_period, y = avg_value, group = 1)) +
geom_line() +
theme_minimal() +
labs(title = "Time-Series of Indicator for India",
x = "Year",
y = "Average Value")
world <- map_data("world")
indicator_avg <- data %>%
filter(indicator == "Percentage children suffering at least three deprivation. Homogeneous severe standards") %>%
group_by(country) %>%
summarize(avg_value = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE))
world_data <- left_join(world, indicator_avg, by = c("region" = "country"))
ggplot(world_data, aes(long, lat, group = group, fill = avg_value)) +
geom_polygon(color = "white") +
scale_fill_viridis_c() +
theme_minimal() +
labs(title = "World Map of Average Indicator Values",
fill = "Average Value")
top_countries <- indicator_avg %>%
bottom_n(10, avg_value) %>%
arrange(desc(avg_value))
bottom_countries <- indicator_avg %>%
arrange(avg_value) %>%
slice_head(n = 10)
ggplot(bottom_countries, aes(x = reorder(country, avg_value), y = avg_value, fill = avg_value)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Top 10 Countries by Average Indicator Value",
x = "Country",
y = "Average Value",
fill = "Average Value")
library(tidyverse)
library(ggplot2)
library(maps)
library(ggmap)
indicator2 <- read.csv("unicef_indicator_2.csv")
metadata <- read.csv("unicef_metadata.csv")
# Merge indicators with metadata
data <- merge(indicator2, metadata, by = c("country", "alpha_2_code", "alpha_3_code", "numeric_code"))
library(tidyverse)
library(ggplot2)
library(maps)
library(ggmap)
indicator2 <- read.csv("unicef_indicator_2.csv")
metadata <- read.csv("unicef_metadata.csv")
# Merge indicators with metadata
data <- merge(indicator2, metadata, by = c("country", "alpha_2_code", "alpha_3_code", "numeric_code"))
View(data)
world <- map_data("world")
indicator_avg <- data %>%
filter(indicator == "Percentage children suffering at least three deprivation. Homogeneous severe standards") %>%
group_by(country) %>%
summarize(avg_value = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE))
world_data <- left_join(world, indicator_avg, by = c("region" = "country"))
ggplot(world_data, aes(long, lat, group = group, fill = avg_value)) +
geom_polygon(color = "white") +
scale_fill_viridis_c() +
theme_minimal() +
labs(title = "World Map of Average Indicator Values",
fill = "Average Value")
world <- map_data("world")
indicator_avg <- data %>%
group_by(country) %>%
summarize(avg_value = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE))
world_data <- left_join(world, indicator_avg, by = c("region" = "country"))
ggplot(world_data, aes(long, lat, group = group, fill = avg_value)) +
geom_polygon(color = "white") +
scale_fill_viridis_c() +
theme_minimal() +
labs(title = "World Map of Average Indicator Values",
fill = "Average Value")
library(tidyverse)
library(ggplot2)
library(maps)
library(ggmap)
indicator1 <- read.csv("unicef_indicator_1.csv")
metadata <- read.csv("unicef_metadata.csv")
library(tidyverse)
library(ggplot2)
library(maps)
library(ggmap)
indicator1 <- read.csv("unicef_indicator_1.csv")
metadata <- read.csv("unicef_metadata.csv")
# Merge indicators with metadata
data <- merge(indicator1, metadata, by = c("country", "alpha_2_code", "alpha_3_code", "numeric_code"))
world <- map_data("world")
indicator_avg <- data %>%
group_by(country) %>%
summarize(avg_value = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE))
world_data <- left_join(world, indicator_avg, by = c("region" = "country"))
ggplot(world_data, aes(long, lat, group = group, fill = avg_value)) +
geom_polygon(color = "white") +
scale_fill_viridis_c() +
theme_minimal() +
labs(title = "World Map of Average Indicator Values",
fill = "Average Value")
library(tidyverse)
library(ggplot2)
library(maps)
library(ggmap)
# Indicator 1 data
indicator1 <- read.csv("unicef_indicator_1.csv")
# Meta data
metadata <- read.csv("unicef_metadata.csv")
world <- map_data("world")
indicator_avg <- data %>%
group_by(country) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE))
# Merge indicator with metadata
data <- merge(indicator1, metadata, by = c("country", "alpha_2_code", "alpha_3_code", "numeric_code"))
str(data)
world <- map_data("world")
indicator_avg <- data %>%
group_by(country) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE))
world_data <- left_join(world, indicator_avg, by = c("region" = "country"))
ggplot(world_data, aes(long, lat, group = group, fill = avg_value)) +
geom_polygon(color = "white") +
scale_fill_viridis_c() +
theme_minimal() +
labs(title = "World Map of Average Indicator Values",
fill = "Average Value")
bottom_countries <- indicator_avg %>%
arrange(avg_value) %>%
slice_head(n = 10)
ggplot(bottom_countries, aes(x = reorder(country, avg_value), y = avg_value, fill = avg_value)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Top 10 Countries by Average Indicator Value",
x = "Country",
y = "Average Value",
fill = "Average Value")
View(data)
# Calculate mean GDP per capita for each country
gdp_data <- metadata %>%
group_by(country) %>%
summarize(mean_gdp_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE))
# Create the bar chart
ggplot(gdp_data, aes(x = reorder(country, -mean_gdp_per_capita), y = mean_gdp_per_capita)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Mean GDP per Capita by Country",
x = "Country", y = "Mean GDP per Capita (constant 2015 US$)") +
theme_minimal()
# Calculate mean GDP per capita for each country
gdp_data <- metadata %>%
group_by(country) %>%
summarize(mean_gdp_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE)) %>%
arrange(desc(mean_gdp_per_capita)) %>%
top_n(10, mean_gdp_per_capita)
# Create the bar chart
ggplot(gdp_data, aes(x = reorder(country, mean_gdp_per_capita), y = mean_gdp_per_capita)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Countries by Mean GDP per Capita",
x = "Country", y = "Mean GDP per Capita (constant 2015 US$)") +
theme_minimal()
# Calculate mean GDP per capita for each country
gdp_data <- metadata %>%
group_by(country) %>%
summarize(mean_gdp_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE)) %>%
arrange(mean_gdp_per_capita) %>%
slice_head(n = 10)
# Create the bar chart
ggplot(gdp_data, aes(x = reorder(country, mean_gdp_per_capita), y = mean_gdp_per_capita)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Countries by Mean GDP per Capita",
x = "Country", y = "Mean GDP per Capita (constant 2015 US$)") +
theme_minimal()
# Calculate mean GDP per capita for each country
gdp_data <- metadata %>%
group_by(country) %>%
summarize(mean_gdp_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE)) %>%
arrange(desc(mean_gdp_per_capita)) %>%
top_n(20, mean_gdp_per_capita)
# Create the bar chart
ggplot(gdp_data, aes(x = reorder(country, mean_gdp_per_capita), y = mean_gdp_per_capita)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Countries by Mean GDP per Capita",
x = "Country", y = "Mean GDP per Capita (constant 2015 US$)") +
theme_minimal()
# Calculate mean GDP per capita for each country
gdp_data <- metadata %>%
group_by(country) %>%
summarize(mean_gdp_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE)) %>%
arrange(desc(mean_gdp_per_capita)) %>%
top_n(20, mean_gdp_per_capita)
# Create the bar chart
ggplot(gdp_data, aes(x = reorder(country, mean_gdp_per_capita), y = mean_gdp_per_capita)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Countries by Mean GDP per Capita",
x = "Country", y = "Mean GDP per Capita (constant 2015 US$)") +
theme_minimal()
# Calculate mean GDP per capita for each country
gdp_data <- metadata %>%
group_by(country) %>%
summarize(mean_gdp_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE)) %>%
arrange(mean_gdp_per_capita) %>%
slice_head(n = 20)
# Create the bar chart
ggplot(gdp_data, aes(x = reorder(country, mean_gdp_per_capita), y = mean_gdp_per_capita)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Bottom 20 Countries by Mean GDP per Capita",
x = "Country", y = "Mean GDP per Capita (constant 2015 US$)") +
theme_minimal
# Calculate mean GDP per capita for each country
gdp_data <- metadata %>%
group_by(country) %>%
summarize(mean_gdp_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE)) %>%
arrange(mean_gdp_per_capita) %>%
slice_head(n = 20)
# Create the bar chart
ggplot(gdp_data, aes(x = reorder(country, mean_gdp_per_capita), y = mean_gdp_per_capita)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Bottom 20 Countries by Mean GDP per Capita",
x = "Country", y = "Mean GDP per Capita (constant 2015 US$)") +
theme_minimal()
scatter_data <- data %>%
group_by(country) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE),
GDP_per_capita = mean(`Life.expectancy.at.birth..total..years.`, na.rm = TRUE))
ggplot(scatter_data, aes(x = GDP_per_capita, y = avg_value)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
theme_minimal() +
labs(title = "Scatterplot of GDP per Capita vs. Average Indicator Value",
x = "GDP per Capita",
y = "Average Indicator Value")
# Develop the data for scatter plot
scatter_data <- data %>%
group_by(country) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE),
GDP_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE))
# Build the scatterplot
ggplot(scatter_data, aes(x = GDP_per_capita, y = avg_value)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
theme_minimal() +
labs(title = "Scatterplot of GDP per Capita vs. Average Indicator Value",
x = "GDP per Capita",
y = "Average Indicator Value")
# Develop the data for scatter plot
scatter_data <- data %>%
group_by(country) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE),
GDP_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE))
# Build the scatterplot
ggplot(scatter_data, aes(x = GDP_per_capita, y = avg_value)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
theme_minimal() +
labs(title = "Scatterplot of GDP per Capita vs. Average Indicator Value",
x = "GDP per Capita",
y = "Average Indicator Value")
time_series_data <- data %>%
group_by(time_period) %>%
summarize(mean_obs_value = mean(obs_value, na.rm = TRUE))
ggplot(time_series_data, aes(x = as.Date(time_period, format = "%Y"), y = mean_obs_value)) +
geom_line(color = "blue") +
labs(title = "Trend of Percentage of Children Suffering Deprivation Over Time",
x = "Time Period", y = "Mean Observation Value (%)")
# Group by year and calculate mean GDP per capita
time_series_data <- metadata %>%
group_by(year) %>%
summarize(mean_gdp_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE))
# Create the time series chart
ggplot(time_series_data, aes(x = year, y = mean_gdp_per_capita)) +
geom_line(color = "blue") +
labs(title = "Trend of GDP per Capita Over Time",
x = "Year", y = "Mean GDP per Capita (constant 2015 US$)") +
theme_minimal()
library(tidyverse)   # For filtering, data manipulations
library(ggplot2)     # For visualizations
library(maps)        # For World chart
library(ggmap)
# Indicator 1 data
indicator1 <- read.csv("unicef_indicator_1.csv")
# Meta data
metadata <- read.csv("unicef_metadata.csv")
# Merge indicator with metadata
data <- merge(indicator1, metadata, by = c("country", "alpha_2_code", "alpha_3_code", "numeric_code"))
str(data)
# Summarize data for world map
world <- map_data("world")
indicator_avg <- data %>%
group_by(country) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE))
# CReate the world Map
world_data <- left_join(world, indicator_avg, by = c("region" = "country"))
ggplot(world_data, aes(long, lat, group = group, fill = avg_value)) +
geom_polygon(color = "white") +
scale_fill_viridis_c() +
theme_minimal() +
labs(title = "World Map of Average Indicator Values",
fill = "Average Value")
# Calculate mean GDP per capita for each country
gdp_data <- metadata %>%
group_by(country) %>%
summarize(mean_gdp_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE)) %>%
arrange(desc(mean_gdp_per_capita)) %>%
top_n(20, mean_gdp_per_capita)
# Create the bar chart
ggplot(gdp_data, aes(x = reorder(country, mean_gdp_per_capita), y = mean_gdp_per_capita)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Countries by Mean GDP per Capita",
x = "Country", y = "Mean GDP per Capita (constant 2015 US$)") +
theme_minimal()
# Calculate mean GDP per capita for each country
gdp_data <- metadata %>%
group_by(country) %>%
summarize(mean_gdp_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE)) %>%
arrange(mean_gdp_per_capita) %>%
slice_head(n = 20)
# Create the bar chart
ggplot(gdp_data, aes(x = reorder(country, mean_gdp_per_capita), y = mean_gdp_per_capita)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Bottom 20 Countries by Mean GDP per Capita",
x = "Country", y = "Mean GDP per Capita (constant 2015 US$)") +
theme_minimal()
# Develop the data for scatter plot
scatter_data <- data %>%
group_by(country) %>%
summarize(avg_value = mean(obs_value, na.rm = TRUE),
GDP_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE))
# Build the scatterplot
ggplot(scatter_data, aes(x = GDP_per_capita, y = avg_value)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
theme_minimal() +
labs(title = "Scatterplot of GDP per Capita vs. Average Indicator Value",
x = "GDP per Capita",
y = "Average Indicator Value")
# Group by year and calculate mean GDP per capita
time_series_data <- metadata %>%
group_by(year) %>%
summarize(mean_gdp_per_capita = mean(`GDP.per.capita..constant.2015.US..`, na.rm = TRUE))
# Create the time series chart
ggplot(time_series_data, aes(x = year, y = mean_gdp_per_capita)) +
geom_line(color = "blue") +
labs(title = "Trend of GDP per Capita Over Time",
x = "Year", y = "Mean GDP per Capita (constant 2015 US$)") +
theme_minimal()
